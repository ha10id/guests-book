{"version":3,"sources":["components/item.js","components/newItem.js","utils/api.js","config.js","components/paginator.js","components/items.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","item","remove","a","className","user","message","type","onClick","NewItem","useState","setItem","save","for","id","value","onChange","e","target","rows","placeholder","API","axios","create","baseURL","responseType","interceptors","request","use","headers","window","localStorage","token","Paginator","changePage","setChangePage","disabled","pages","current","pageBack","title","autoFocus","size","onKeyDown","keyCode","setCurrentPage","parseInt","preventDefault","total","pageForward","ItemList","data","items","setItems","limit","setPages","records","setRecords","getItems","get","then","response","json","Math","ceil","parseFloat","posts","catch","error","alert","useEffect","saveItem","it","console","log","post","resp","removeItem","delete","map","idx","key","pn","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31b1d612.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Item = (props) => {\n  const { item } = props;\n\n  const remove = async () => {\n    props.remove(item);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"item_text\">\n        <p>{item.user}</p>\n        <p>{item.message}</p>\n      </div>\n      <div className=\"actions\">\n        <button\n          type=\"button\"\n          className=\"link-button\"\n          onClick={remove}\n        >\n          Удалить\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Item;\n","import React, {useState} from \"react\";\n\nconst NewItem = (props) => {\n  let [item, setItem] = useState({ user: \"\", message: \"\" });\n\n  const save = async () => {\n    props.save(item);\n    setItem({ user: \"\", message: \"\" });\n  };\n\n  return (\n    <div className=\"card\">\n      <label for=\"user\">Ваше имя:</label>\n      <input  id=\"user\"\n              type=\"text\"\n              value={item.user}\n              onChange={e => setItem({ ...item, user: e.target.value })}\n              />\n      <label for=\"message\">Сообщение:</label>\n      <textarea   id=\"message\"\n                  className=\"textarea\"\n                  type=\"text\"\n                  rows=\"7\"\n                  placeholder=\"Введите текст\"\n                  value={item.message}\n                  onChange={e => setItem({ ...item, message: e.target.value })}\n                />\n      <div className=\"btn-container\">\n        <button className=\"button\" onClick={save}>\n          Сохранить\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewItem;\n","import axios from \"axios\";\nimport { baseUrl } from \"../config\";\n\nconst API = axios.create({\n  baseURL: baseUrl,\n  responseType: \"json\"\n});\n\nAPI.interceptors.request.use(request => {\n  request.headers[\"Authorization\"] = \"Bearer \" + window.localStorage.token;\n  // console.log(request);\n  return request;\n});\n\nexport { API };","export const baseUrl = \"http://localhost:4000/api/\";","import React, { useState } from \"react\";\n\nexport const Paginator = (props) => {\n  const [changePage, setChangePage] = useState(false);\n\n  return (\n    <div className=\"btn-container\">\n      <button\n        className=\"button\"\n        disabled={props.pages.current === 1}\n        onClick={props.pageBack}\n      >\n        <span>Назад</span>\n      </button>\n      <button\n        title=\"кликните для ввода номера вручную\"\n        className=\"button\"\n        onClick={() => setChangePage(true)}\n      >\n        {changePage ? (\n          <input\n            autoFocus\n            className=\"clean\"\n            title=\"Enter - перейти на страницу, Esc - отменить\"\n            type=\"text\"\n            size={5}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) {\n                props.setCurrentPage(parseInt(e.target.value));\n                setChangePage(false);\n              } else if (e.keyCode === 27) {\n                setChangePage(false);\n              } else if (e.keyCode < 48 || e.keyCode > 57) {\n                e.preventDefault();\n              }\n            }}\n          />\n        ) : (\n          <span>\n            Страница {props.pages.current} из {props.pages.total}\n          </span>\n        )}\n      </button>\n      <button\n        className=\"button\"\n        disabled={props.pages.current === props.pages.total}\n        onClick={props.pageForward}\n      >\n        <span>Вперёд</span>\n      </button>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { API } from \"../utils/api\";\nimport Item from \"./item\";\nimport NewItem from \"./newItem\";\nimport { Paginator } from \"./paginator\";\n\nconst ItemList = () => {\n  const [items, setItems] = useState({ data: [] });\n  const [pages, setPages] = useState({ current: 1, total: 0, limit: 3 });\n  const [records, setRecords] = useState(0);\n  let item = {};\n  const getItems = async () => {\n    let request = `posts?page=${pages.current}`;\n\n    API.get(request)\n      .then((response) => {\n        let json = response.data;\n        setPages({\n          ...pages,\n          total: Math.ceil(parseFloat(json.total / pages.limit)),\n        });\n        setRecords(json.total);\n        setItems({ data: json.posts });\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n  useEffect(() => {\n    getItems();\n  }, [pages.current, records]);\n\n  const saveItem = async (it) => {\n    item = it;\n    console.log(item);\n\n    await API.post(\"posts\", item).then(resp => {\n      console.log(resp);\n      setPages({\n        ...pages,\n        current: Math.ceil(parseFloat(resp.data.total / pages.limit))\n      });\n      setRecords(resp.data.total);\n    });\n  };\n\n  const removeItem = async (it) => {\n    item = it;\n    console.log(item);\n    await API.delete(`posts/${item.id}`).then(resp => {\n      console.log(resp);\n      setPages({\n        ...pages,\n        current: Math.ceil(parseFloat(resp.data.total / pages.limit))\n      });\n      setRecords(resp.data.total);\n    });\n  };\n\n  return (\n    <>\n      <NewItem  save={saveItem}/>\n      {items.data.map((item, idx) => (\n        <Item key={idx} item={item} remove={removeItem}/>\n      ))}\n      <Paginator\n        pages={pages}\n        setCurrentPage={(pn) => {\n          if (pn > pages.total) pn = pages.total;\n          setPages({ ...pages, current: pn });\n        }}\n        pageBack={() => {\n          setPages({ ...pages, current: pages.current - 1 });\n        }}\n        pageForward={() => setPages({ ...pages, current: pages.current + 1 })}\n      />\n    </>\n  );\n};\n\nexport default ItemList;\n","import React from 'react';\nimport './App.css';\nimport { ItemList } from './components/';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ItemList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}