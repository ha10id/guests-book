{"version":3,"sources":["components/item.js","components/newItem.js","utils/api.js","config.js","components/paginator.js","components/items.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","item","remove","a","className","user","message","style","justifyContent","type","onClick","NewItem","useState","setItem","save","class","for","id","placeholder","value","onChange","e","target","rows","API","axios","create","baseURL","responseType","interceptors","request","use","headers","window","localStorage","token","Paginator","changePage","setChangePage","disabled","pages","current","pageBack","title","autoFocus","size","onKeyDown","keyCode","setCurrentPage","parseInt","preventDefault","total","pageForward","ItemList","data","items","setItems","limit","setPages","records","setRecords","getItems","get","then","response","json","Math","ceil","parseFloat","posts","catch","error","alert","useEffect","saveItem","it","console","log","post","resp","removeItem","delete","map","idx","key","pn","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e2a9310.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Item = (props) => {\n  const { item } = props;\n\n  const remove = async () => {\n    props.remove(item);\n  };\n\n  return (\n    <div className=\"col-sm\">\n    <div className=\"card fluid\">\n      <div className=\"item_text\">\n        <p>Гость: {item.user}</p>\n        <p>{item.message}</p>\n      </div>\n      <div className=\"row fluid\" style={{justifyContent:\"flex-end\"}}>\n        <button\n          type=\"button\"\n          className=\"secondary\"\n          onClick={remove}\n        >\n          Удалить\n        </button>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default Item;\n","import React, { useState } from \"react\";\n\nconst NewItem = (props) => {\n  let [item, setItem] = useState({ user: \"\", message: \"\" });\n\n  const save = async () => {\n    props.save(item);\n    setItem({ user: \"\", message: \"\" });\n  };\n\n  return (\n    <div className=\"col-sm\">\n      <div className=\"card fluid\">\n        <div class=\"input-group vertical\">\n          <label for=\"user\">Ваше имя:</label>\n          <input\n            type=\"text\"\n            id=\"user\"\n            placeholder=\"Username\"\n            value={item.user}\n            onChange={(e) => setItem({ ...item, user: e.target.value })}\n          />\n        </div>\n        <div class=\"input-group vertical\">\n          <label for=\"user\">Сообщение:</label>\n          <textarea\n            id=\"message\"\n            className=\"textarea\"\n            type=\"text\"\n            rows=\"7\"\n            placeholder=\"Введите текст\"\n            value={item.message}\n            onChange={(e) => setItem({ ...item, message: e.target.value })}\n          />\n        </div>\n\n        <div className=\"row col-sm\" style={{justifyContent: \"center\"}}>\n          <button className=\"button primary\" onClick={save}>\n            Сохранить\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewItem;\n","import axios from \"axios\";\nimport { baseUrl } from \"../config\";\n\nconst API = axios.create({\n  baseURL: baseUrl,\n  responseType: \"json\"\n});\n\nAPI.interceptors.request.use(request => {\n  request.headers[\"Authorization\"] = \"Bearer \" + window.localStorage.token;\n  // console.log(request);\n  return request;\n});\n\nexport { API };","export const baseUrl = \"http://localhost:4000/api/\";","import React, { useState } from \"react\";\n\nexport const Paginator = (props) => {\n  const [changePage, setChangePage] = useState(false);\n\n  return (\n    <div className=\"row col-sm\" style={{justifyContent:\"center\"}}>\n      <button\n        className=\"button primary\"\n        disabled={props.pages.current === 1}\n        onClick={props.pageBack}\n      >\n        <span>Назад</span>\n      </button>\n      <button\n        title=\"кликните для ввода номера вручную\"\n        className=\"button\"\n        onClick={() => setChangePage(true)}\n      >\n        {changePage ? (\n          <input\n            autoFocus\n            className=\"clean\"\n            title=\"Enter - перейти на страницу, Esc - отменить\"\n            type=\"text\"\n            size={5}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) {\n                props.setCurrentPage(parseInt(e.target.value));\n                setChangePage(false);\n              } else if (e.keyCode === 27) {\n                setChangePage(false);\n              } else if (e.keyCode < 48 || e.keyCode > 57) {\n                e.preventDefault();\n              }\n            }}\n          />\n        ) : (\n          <span>\n            Страница {props.pages.current} из {props.pages.total}\n          </span>\n        )}\n      </button>\n      <button\n        className=\"button primary\"\n        disabled={props.pages.current === props.pages.total}\n        onClick={props.pageForward}\n      >\n        <span>Вперёд</span>\n      </button>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { API } from \"../utils/api\";\nimport Item from \"./item\";\nimport NewItem from \"./newItem\";\nimport { Paginator } from \"./paginator\";\n\nconst ItemList = () => {\n  const [items, setItems] = useState({ data: [] });\n  const [pages, setPages] = useState({ current: 1, total: 0, limit: 3 });\n  const [records, setRecords] = useState(0);\n  let item = {};\n  const getItems = async () => {\n    let request = `posts?page=${pages.current}`;\n\n    API.get(request)\n      .then((response) => {\n        let json = response.data;\n        setPages({\n          ...pages,\n          total: Math.ceil(parseFloat(json.total / pages.limit)),\n        });\n        setRecords(json.total);\n        setItems({ data: json.posts });\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n  useEffect(() => {\n    getItems();\n  }, [pages.current, records]);\n\n  const saveItem = async (it) => {\n    item = it;\n    console.log(item);\n\n    await API.post(\"posts\", item).then(resp => {\n      console.log(resp);\n      setPages({\n        ...pages,\n        current: Math.ceil(parseFloat(resp.data.total / pages.limit))\n      });\n      setRecords(resp.data.total);\n    });\n  };\n\n  const removeItem = async (it) => {\n    item = it;\n    console.log(item);\n    await API.delete(`posts/${item.id}`).then(resp => {\n      console.log(resp);\n      setPages({\n        ...pages,\n        current: Math.ceil(parseFloat(resp.data.total / pages.limit))\n      });\n      setRecords(resp.data.total);\n    });\n  };\n\n  return (\n    <div className=\"container fluid\">\n      <NewItem  save={saveItem}/>\n      {items.data.map((item, idx) => (\n        <div className=\"row\">\n        <Item key={idx} item={item} remove={removeItem}/>\n        </div>\n      ))}\n      <Paginator\n        pages={pages}\n        setCurrentPage={(pn) => {\n          if (pn > pages.total) pn = pages.total;\n          setPages({ ...pages, current: pn });\n        }}\n        pageBack={() => {\n          setPages({ ...pages, current: pages.current - 1 });\n        }}\n        pageForward={() => setPages({ ...pages, current: pages.current + 1 })}\n      />\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"mini.css\";\nimport { ItemList } from \"./components/\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h3>Гостевая книга</h3>\n      </header>\n      <ItemList />\n      <footer>\n        <p>© 40054-50001 Mars Weapons Inc.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}